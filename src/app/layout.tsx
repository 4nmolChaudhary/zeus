import type { Metadata, Viewport } from 'next'

import { Inter_Tight, Geist_Mono } from 'next/font/google'
import './globals.css'

import { ThemeProvider } from '@/components/others/theme-provider'
import { Toaster } from '@/components/ui/sonner'
import { ReactQueryClientProvider } from '@/components/others/query-client-provider'

const interTight = Inter_Tight({ variable: '--font-inter-tight', subsets: ['latin'] })
const geistMono = Geist_Mono({ variable: '--font-geist-mono', subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'ZEUS',
  description: 'Generated by create next app',
  manifest: '/manifest.json',
  appleWebApp: {
    capable: true,
    statusBarStyle: 'black-translucent',
    title: 'ZEUS',
  },
}

export const viewport: Viewport = {
  maximumScale: 1,
  userScalable: false,
}

export default function RootLayout({ children }: Readonly<{ children: React.ReactNode }>) {
  return (
    <ReactQueryClientProvider>
      <html lang='en' suppressHydrationWarning>
        <head>
          <meta name='theme-color' content='#ffffff' />
          <meta name='apple-mobile-web-app-status-bar-style' content='black-translucent' />
        </head>
        <body className={`${interTight.variable} ${geistMono.variable} antialiased bg-background`}>
          <ThemeProvider attribute='class' defaultTheme='system' enableSystem disableTransitionOnChange>
            {children}
            <Toaster position='top-center' richColors />
          </ThemeProvider>
        </body>
      </html>
    </ReactQueryClientProvider>
  )
}

